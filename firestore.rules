rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Posts collection - public read, admin write
    match /posts/{postId} {
      // Allow anyone to read published posts
      allow read: if true;
      
      // Only allow authenticated admin users to write
      allow write: if request.auth != null && 
        request.auth.token.email in [
          'admin@l457.com' // Replace with your admin email
          // Add more admin emails as needed
        ];
    }
    
    // Usernames collection - for admin username management
    match /usernames/{username} {
      // Allow authenticated users to read usernames (for uniqueness check)
      allow read: if request.auth != null;
      
      // Only allow admin users to create/update usernames
      allow write: if request.auth != null && 
        request.auth.token.email in [
          'admin@l457.com' // Replace with your admin email
        ];
    }
    
    // Admin metadata collection (optional)
    match /admin/{document} {
      // Only admin users can read/write admin metadata
      allow read, write: if request.auth != null && 
        request.auth.token.email in [
          'admin@l457.com' // Replace with your admin email
        ];
    }
    
    // Site configuration (optional)
    match /config/{document} {
      // Public read for site configuration
      allow read: if true;
      
      // Only admin write
      allow write: if request.auth != null && 
        request.auth.token.email in [
          'admin@l457.com' // Replace with your admin email
        ];
    }
    
    // Default deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

// Storage rules for Firebase Storage
// Add this to Firebase Console → Storage → Rules
/*
rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Images folder - public read, admin write
    match /images/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && 
        request.auth.token.email in [
          'admin@l457.com' // Replace with your admin email
        ];
    }
    
    // Posts folder - public read, admin write
    match /posts/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && 
        request.auth.token.email in [
          'admin@l457.com' // Replace with your admin email
        ];
    }
    
    // Default deny
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
*/